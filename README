the spec
========

a project contains multiple targets.
a target contains multiple translation units
translation units are compiled, and then linked into targets

a project may be specified via a text-format language (TBD) or by automagic
determination (the usual method) - which involves recursively scanning
directories to build a tree of targets.

an automagic target is defined as any translation unit in any directory, or tree of
directories, under the directory in which tbs is run, minus any directories
containing a subtarget, or any explicitly specified targets.

the name of the target may be changed from the autodetected default (the
directory name) by specifying the Target.Name property:

/* $Target.Name: mycoolbinary */
/* $Target.Type: dll */ -- default is 'app'

specifying the target property will cause the creation of a new target in the
directory it is specified, and any subdirectories of that directory. specifying
the target property twice in one directory is illegal.

translation units may set properties in code which affect the compilation and
linking stages, e.g:

/* $File.CompileFlags: -std=c++11 */
/* $Target.CompileFlags: -std=c++ */ - modifies cflags over the whole target
/* $Target.LinkerFlags: -lfoo */
/* $Target.PkgConfig: sqlite3 */
/* $Target.Features: c++11 */ - compile all c++ files as c++11

there are three seperate scopes: File, Target, and Project.
File affects a single TU, Target affects all files in a target, and Project
affects all files in all targets. some rules only apply to some scopes. linker
flags & pkgconfig only apply to targets or project.

additional processing may also be requested by other things in the source file,
e.g. Q_OBJECT macros.
